import { Logger } from '@nestjs/common'
import { NestFactory } from '@nestjs/core'
import { ConfigService } from '@<%= npmScope %>/api/config'
import cookieParser from 'cookie-parser'

import { AppModule } from './app.module'

async function bootstrap() {
  const app = await NestFactory.create(AppModule)
  const configService = app.get(ConfigService)

  // Get individual properties with fallbacks
  const prefix = configService.prefix || 'api';
  const port = configService.port || 3000;
  const host = configService.host || 'localhost';

  app.setGlobalPrefix(prefix)

  // Use the apiCorsOrigins getter and handle as array
  const origins = configService.apiCorsOrigins.length
    ? configService.apiCorsOrigins
    : ['http://localhost:4200']; // fallback for dev

  app.enableCors({
    credentials: true,
    origin: (origin, callback) => {
      if (!origin) return callback(null, true);
      if (origins.includes(origin)) {
        return callback(null, true);
      }
      return callback(new Error('Not allowed by CORS'));
    },
  });
  app.use(cookieParser(configService.cookie.secret || 'secret'));

  await app.listen(port, host, () => {
    Logger.log(`Listening at http://${host}:${port}/${prefix}`)
    Logger.log(`Listening at http://${host}:${port}/graphql`)
  })
}

bootstrap().catch((error) => {
  Logger.error('Failed to start the application', error);
  process.exit(1);
});
