import { formatFiles, installPackagesTask, Tree } from '@nx/devkit';
import { getDMMF } from '@prisma/internals';
import { addToModules, apiLibraryGenerator, getPrismaSchemaPath, readPrismaSchema } from '@nestled/utils';
import { GenerateCustomGeneratorSchema } from './schema';
import { execSync } from 'child_process';
import { getNpmScope } from '@nx/js/src/utils/package-json/get-npm-scope';
import pluralize from 'pluralize';
declare const defaultDependencies: {
    formatFiles: typeof formatFiles;
    installPackagesTask: typeof installPackagesTask;
    getDMMF: typeof getDMMF;
    addToModules: typeof addToModules;
    apiLibraryGenerator: typeof apiLibraryGenerator;
    getPrismaSchemaPath: typeof getPrismaSchemaPath;
    readPrismaSchema: typeof readPrismaSchema;
    execSync: typeof execSync;
    getNpmScope: typeof getNpmScope;
    pluralize: typeof pluralize;
    join: (...paths: string[]) => string;
};
export type CustomGeneratorDependencies = typeof defaultDependencies;
export declare function customGeneratorLogic(tree: Tree, schema: GenerateCustomGeneratorSchema, dependencies?: CustomGeneratorDependencies): Promise<() => void>;
export default function (tree: Tree, schema: GenerateCustomGeneratorSchema): Promise<() => void>;
export {};
