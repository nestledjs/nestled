import React, { useLayoutEffect, useState } from 'react'
import { useAtom } from 'jotai'
import { currentPathAtom, isDevAtom, searchAtom } from '@<%= npmScope %>/web/global/data-access'
import { WebUiDataTable } from '@<%= npmScope %>/web-ui/data-table'
import { WebUiDevData } from '@<%= npmScope %>/web-ui/dev-data'
import { useUser<%= pluralClassName %>Query, useUser<%= className %>PaginationQuery } from '@<%= npmScope %>/shared/util-sdk'
import { RESET } from 'jotai/utils'

interface Web<%= className %>ListProps {
  userId?: string
  chapterId?: string
  referralId?: string
}

export function Web<%= className %>List(props: Web<%= className %>ListProps) {
  const [, setCurrentPath] = useAtom(currentPathAtom)
  const [search] = useAtom(searchAtom)
  const [isDev] = useAtom(isDevAtom)
  const [skip, setSkip] = useState(0)

  const variables = {
    input: {
      take: 20,
      userId: props?.userId,
      chapterId: props?.chapterId,
      referralId: props?.referralId,
      skip,
      search,
    },
  }

  const { data: <%= pluralPropertyName %> } = useUser<%= pluralClassName %>Query({
    variables,
  })

  const { data: pagination } = useUser<%= className %>PaginationQuery({
    variables,
  })

  useLayoutEffect(() => {
    setCurrentPath({
      path: '/<%= pluralName %>',
      name: '<%= pluralClassName %>',
      description: 'View and manage all <%= pluralName %> in your organization',
      showSearch: true,
      actionText: 'Add <%= className %>',
      actionLink: '/<%= name %>/new',
    })

    return () => {
      setCurrentPath(RESET)
    }
  }, [])

  return (
    <>
      <WebUiDataTable
        data={<%= pluralPropertyName %>?.<%= pluralPropertyName %>}
        path={'/<%= name %>'}
        fields={[{name: 'name'}]}
        pagination={pagination?.counters}
        setSkip={setSkip}
      />
      {isDev && <%= pluralPropertyName %>?.<%= pluralPropertyName %> ? <WebUiDevData data={<%= pluralPropertyName %>} /> : null}
    </>
  )
}
